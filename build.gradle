buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.7"
    }
}

plugins {
    id "java-gradle-plugin"
    id "groovy"
    id 'com.avast.gradle.docker-compose' version "0.4.5"
}

apply plugin: "com.gradle.plugin-publish"

group 'com.github.vadeg'
version '1.0.0'

task wrapper(type: Wrapper) {
  gradleVersion = '4.0'
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    testCompile("org.spockframework:spock-core:1.1-groovy-2.4") {
        exclude module: "groovy-all"
    }
    testRuntime files(createClasspathManifest)
}

test {
    exclude '**/it/**'
}

pluginBundle {
    website = 'https://github.com/vadeg'
    vcsUrl = 'https://github.com/vadeg/gradle-exhibitor-plugin'
    description = 'Exhibitor plugin allows to update Zookeeper settings using Exhibitor API'
    tags = ['exhibitor', 'zookeeper']

    plugins {
        exhibitorPlugin {
            id = 'com.github.vadeg.exhibitor'
            displayName = 'Gradle Exhibitor Plugin'
        }
    }
}

task integrationTest(type: Test) {
    dependsOn 'build'
    reports {
        html {
            destination file("$buildDir/reports/tests/integrationTests")
        }
    }
    include '**/it/**'
}
dockerCompose.isRequiredBy(integrationTest)
